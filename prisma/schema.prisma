// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int               @id @default(autoincrement())
  created_at      DateTime          @default(now())
  updated_at      DateTime?
  email           String
  name            String
  password        String
  Stats           Stats?
  Task            Task[]
  TimeBlock       TimeBlock[]
  PomodoroSession PomodoroSession[]
}

model Stats {
  id              Int  @id @default(autoincrement())
  user            User @relation(fields: [user_id], references: [id])
  user_id         Int  @unique
  break_interval  Int
  intervals_count Int
}

model Task {
  id           Int       @id @default(autoincrement())
  created_at   DateTime  @default(now())
  updated_at   DateTime?
  name         String
  is_completed Boolean   @default(false)
  User         User?     @relation(fields: [userId], references: [id])
  userId       Int?
}

model TimeBlock {
  id         Int       @id @default(autoincrement())
  created_at DateTime  @default(now())
  updated_at DateTime?
  name       String
  color      String
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  duration   Int
  order      Int
}

model PomodoroSession {
  id            Int             @id @default(autoincrement())
  created_at    DateTime        @default(now())
  updated_at    DateTime?
  is_completed  Boolean         @default(false)
  user          User            @relation(fields: [userId], references: [id])
  userId        Int
  PomodoroRound PomodoroRound[]
}

model PomodoroRound {
  id                Int             @id @default(autoincrement())
  created_at        DateTime        @default(now())
  updated_at        DateTime?
  total_minutes     Int
  is_completed      Boolean         @default(false)
  pomodoro_session  PomodoroSession @relation(fields: [pomodoroSessionId], references: [id])
  pomodoroSessionId Int
}
